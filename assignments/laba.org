#+title: Lab A: Web Scraping
#+author:
#+date:  5 November 2024
:export:
#+latex_class: tufte-handout
#+options: toc:nil
#+latex_compiler: xelatex
#+latex_header: \usepackage[final]{microtype}
#+latex_header: \usepackage{fontspec}
#+latex_header: \setmainfont{Gentium Plus}
#+latex_header: \setmonofont[Scale=0.8]{Maple Mono NF}
#+latex_header: \renewcommand\allcapsspacing[1]{{\addfontfeature{LetterSpace=15}#1}}
#+latex_header: \renewcommand\smallcapsspacing[1]{{\addfontfeature{LetterSpace=10}#1}}
#+latex_header: \usepackage{enumitem}
#+latex_header: \setlist{nosep}
#+property: header-args :eval no-export
:end:

* Instructions
1. Add ~laba.py~ to your ~ds1043~ repository. I've provided copies on Harvey and on GitHub (see [[https://github.com/noeticmech/ds-1043/blob/master/assignments/laba.py]])
2. Once you have completed the indicated functions, submit the URL of your repository and the tag for the release/commit you wish to be graded on Harvey.

* Web Scraping
We are going to write a program that scraps data from the website http://books.toscrape.com and creates a CSV file that contains each book's title, category or categories, UPC, price and tax data, availability, and number of reviews. You will need to implement the following:
- ~save_state~ and ~load_state~, which writes and reads the program's progress through the site to/from a JSON file containing the current list of links to explore and the dictionary of processed files and the data extracted from them.
- ~write_spreadsheet~ writes book data to a CSV file. I would suggest ensuring that the dictionaries stored in data are appropriate for writing to a CSV file using ~csv.DictWriter~.
- code at the beginning of the main block that loads the state file if it can be accessed or starts afresh if it cannot
- the main loop of the program. See the comment in ~laba.py~ for a general break down of what needs to happen in that loop.
You should feel free to modify any part of this python file if you run into a good reason for doing so.

  
